---
swagger: "2.0"
info:
  description: "This is testing for crud"
  version: "1.0.0"
  title: "demo"
  termsOfService: "http://swagger.io/terms/"
host: "localhost:8080"
basePath: "/v2"
tags:
- name: "user"
  description: "user definition"
schemes:
- "http"
paths:
  /user/{id}:
    get:
      tags:
      - "user"
      summary: "Get user by user name"
      description: ""
      operationId: "getUserById"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "The Id that needs to be fetched. Use user1 for testing. "
        required: true
        type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/User"
        "400":
          description: "Invalid username supplied"
        "404":
          description: "User not found"
      x-swagger-router-controller: "User"
    put:
      tags:
      - "user"
      summary: "Update user"
      description: "This can only be done by the logged in user."
      operationId: "updateUser"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Update user object"
        required: true
        schema:
          $ref: "#/definitions/User"
      - name: "id"
        in: "path"
        description: "The Id that needs to be fetched. Use user1 for testing. "
        required: true
        type: "string"
      responses:
        "201":
          description: "User Created"
          schema:
            $ref: "#/definitions/User"
      x-swagger-router-controller: "User"
    delete:
      tags:
      - "user"
      summary: "Delete user"
      description: "This can only be done by the logged in user."
      operationId: "deleteUser"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Update user object"
        required: true
        schema:
          $ref: "#/definitions/User"
      - name: "id"
        in: "path"
        description: "The Id that needs to be fetched. Use user1 for testing. "
        required: true
        type: "string"
      responses:
        "204":
          description: "User Deleted"
          schema:
            $ref: "#/definitions/User"
      x-swagger-router-controller: "User"
    patch:
      tags:
      - "user"
      summary: "Update user"
      description: "This can only be done by the logged in user."
      operationId: "patchUser"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Update user object"
        required: true
        schema:
          $ref: "#/definitions/User"
      - name: "id"
        in: "path"
        description: "The Id that needs to be fetched. Use user1 for testing. "
        required: true
        type: "string"
      responses:
        "201":
          description: "User Created"
          schema:
            $ref: "#/definitions/User"
      x-swagger-router-controller: "User"
  /user:
    get:
      tags:
      - "user"
      summary: "get for user"
      description: "Returns a list of user"
      operationId: "getUser"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/User"
        "400":
          description: "Invalid status value"
      x-swagger-router-controller: "User"
    post:
      tags:
      - "user"
      summary: "Create user"
      description: "This can only be done by the logged in user."
      operationId: "createUser"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Created user object"
        required: true
        schema:
          $ref: "#/definitions/User"
      responses:
        "201":
          description: "User Created"
          schema:
            $ref: "#/definitions/User"
      x-swagger-router-controller: "User"
definitions:
  User:
    type: "object"
    properties:
      id:
        type: "string"
      username:
        type: "string"
      firstName:
        type: "string"
      lastName:
        type: "string"
      email:
        type: "string"
      password:
        type: "string"
      phone:
        type: "string"
      userStatus:
        type: "integer"
        format: "int32"
        description: "User Status"
    xml:
      name: "User"
    example:
      firstName: "firstName"
      lastName: "lastName"
      password: "password"
      userStatus: 6
      phone: "phone"
      id: "1b3d5f7h-1b3d-1b3d-1b3d-1b3d5f7h9j1l"
      email: "email"
      username: "username"
